build: false
clone_depth: 50
platform:
  - x64
environment:
  matrix:
    - dependencies: lowest
      php_version: 7.1
    - dependencies: highest
      php_version: 7.1

  project_directory: c:\projects\better-reflection
  composer_directory: c:\tools\composer
  composer_executable: c:\tools\composer\composer.phar
  composer_installer: c:\tools\composer\installer.php
  php_directory: c:\tools\php71
matrix:
  fast_finish: true
clone_folder: c:\projects\better-reflection
cache:
  - c:\tools\composer -> appveyor.yml
  - '%LOCALAPPDATA%\Composer -> appveyor.yml'
  - c:\tools\php71 -> appveyor.yml
init:
  - ps: $Env:PATH = $Env:php_directory + ';' + $Env:composer_directory + ';' + $Env:PATH
  - ps: $Env:ANSICON = '121x90 (121x90)'
install:
  # Install PHP
  - ps: If ((Test-Path $Env:php_directory) -eq $False) { appveyor-retry cinst -y OpenSSL.Light } Else { appveyor-retry choco upgrade OpenSSL.Light }
  - ps: If ((Test-Path $Env:php_directory) -eq $False) { appveyor-retry cinst -y php } Else { appveyor-retry choco upgrade php }

  # Prepare PHP
  - ps: cd $Env:php_directory
  - ps: Copy-Item php.ini-production -Destination php.ini
  - ps: Add-Content -Path php.ini -Value 'date.timezone="UTC"'
  - ps: Add-Content -Path php.ini -Value 'extension_dir=ext'
  - ps: Add-Content -Path php.ini -Value 'extension=php_curl.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_intl.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_openssl.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_mbstring.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_mysqli.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_pdo_mysql.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_soap.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_sqlite3.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_xsl.dll'
  - ps: php --version

  # Prepare composer
  - ps: If ((Test-Path $Env:composer_directory) -eq $False) { New-Item -Path $Env:composer_directory -ItemType 'directory' }
  - ps: If ((Test-Path $Env:composer_installer) -eq $False) { appveyor-retry appveyor DownloadFile https://getcomposer.org/installer -FileName $Env:composer_installer }
  - ps: If ((Test-Path $Env:composer_executable) -eq $False) { php $Env:composer_installer --install-dir=$Env:composer_directory }
  - ps: Set-Content -Path ($Env:composer_directory + '\composer.bat') -Value ('@php ' + $Env:composer_executable + ' %*')
  - composer self-update

  # Install dependencies
  - ps: cd $Env:project_directory
  - IF %dependencies%==lowest composer update --prefer-dist --prefer-lowest --prefer-stable --no-interaction --no-progress
  - IF %dependencies%==highest composer update --prefer-dist --no-interaction --no-progress
test_script:
  - ps: cd $Env:project_directory
  - php -dmemory_limit=2G vendor\phpunit\phpunit\phpunit


